[{"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\index.tsx":"1","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\serviceWorker.ts":"2","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\i18next.ts":"3","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\consoleGreeting.ts":"4","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\App.tsx":"5","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\i18nextOptions.ts":"6","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\contextes\\globalContext.ts":"7","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Overlay.tsx":"8","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\GlobalStyle.tsx":"9","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\PrivateRoute.tsx":"10","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MainSection\\MainSectionBottomSpacer.tsx":"11","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MainSection\\MainSection.tsx":"12","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\DesktopTopMenu\\DesktopTopMenu.tsx":"13","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MainSection\\MainSectionContent.tsx":"14","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuButton.tsx":"15","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MobileUpsideMenu\\MobileUpsideMenu.tsx":"16","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenu.tsx":"17","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MobileBottomMenu\\MobileBottomMenu.tsx":"18","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MobileColorThemeButton\\MobileColorThemeButton.tsx":"19","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\DeletePostPage.tsx":"20","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\AddSubpagePage.tsx":"21","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\MainPage.tsx":"22","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\PostPage.tsx":"23","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\Error404.tsx":"24","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\Subpage.tsx":"25","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\ResetPasswordPage.tsx":"26","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\ManagePostsPage.tsx":"27","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\LoginPage.tsx":"28","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\ManageUsersPage.tsx":"29","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\ManageLessonPlanPage.tsx":"30","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Loader\\Loader.tsx":"31","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\AddUsersPage.tsx":"32","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\ManageSubpagesPage.tsx":"33","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\AddPostPage.tsx":"34","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\Presentation.tsx":"35","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\getToken.ts":"36","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\parseJWT.ts":"37","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\variables.ts":"38","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\scrollTop.ts":"39","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\toggleDarkTheme.ts":"40","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\DesktopTopMenu\\DesktopTopMenuHeader.tsx":"41","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MobileUpsideMenu\\MobileUpsideMenuHeader.tsx":"42","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuWrapper.tsx":"43","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuButtonWrapper.tsx":"44","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuOuterLink.tsx":"45","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuCategory.tsx":"46","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuHeightFixer.tsx":"47","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MobileColorThemeButton\\MobileColorThemeButtonWrapper.tsx":"48","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuInnerLink.tsx":"49","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MobileBottomMenu\\MobileBottomMenuWrapper.tsx":"50","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\PresentationWrapper.tsx":"51","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\PresentationBlock.tsx":"52","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\PresentationImageSection.tsx":"53","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\PresentationSection.tsx":"54","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Section.tsx":"55","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Form.tsx":"56","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Page.tsx":"57","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Loader\\LoaderImage.tsx":"58","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Loader\\LoaderWrapper.tsx":"59","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Select\\Select.tsx":"60","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Gallery\\Gallery.tsx":"61","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\PresentationContentFitImage\\PresentationContentFitImage.tsx":"62","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\PresentationImageBlock\\PresentationImageBlock.tsx":"63","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\InputBox\\InputBox.tsx":"64","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Button\\Button.tsx":"65","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Textarea\\Textarea.tsx":"66","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\makrdownOptions.ts":"67","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Link\\Link.tsx":"68","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\TextBlock\\TextBlock.tsx":"69","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\CodeBlock\\CodeBlock.tsx":"70","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuCategoryChildrenWrapper.tsx":"71","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuItemWrapper.tsx":"72","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\ContentWrapper.tsx":"73","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuCategoryWrapper.tsx":"74","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Label.tsx":"75","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Textarea\\TextareaWrapper.tsx":"76","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Button\\ButtonTextWrapper.tsx":"77","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\InputBox\\InputBoxWrapper.tsx":"78","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\InputBox\\InputBoxInput.tsx":"79","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\InputBox\\InputBoxLabel.tsx":"80","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Button\\ButtonWrapper.tsx":"81","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\PresentationImageBlock\\PresentationImageBlockWrapper.tsx":"82","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\PresentationContentFitImage\\PresentationContentFitImageBlock.tsx":"83","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Gallery\\GalleryButton.tsx":"84","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Gallery\\GalleryLogo.tsx":"85","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Select\\SelectWrapper.tsx":"86","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Gallery\\GalleryWrapper.tsx":"87","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\VisibilityDetector.tsx":"88","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Post\\Post.tsx":"89","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\TextBlock\\MarkdownTextBlock.tsx":"90","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\CodeBlock\\MarkdownCodeBlock.tsx":"91","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Gallery\\MarkdownGallery.tsx":"92","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\ThreejsView\\ThreejsView.tsx":"93","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Chart\\MarkdownChart.tsx":"94","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Image\\Image.tsx":"95","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Table\\Table.tsx":"96","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\TikTok\\TikTok.tsx":"97","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Embed\\Embed.tsx":"98","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Link\\LinkWrapper.tsx":"99","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\TextBlock\\TextBlockWrapper.tsx":"100","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Link\\LinkContentWrapper.tsx":"101","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Link\\LinkHeader.tsx":"102","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Post\\PostTitle.tsx":"103","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Post\\PostImage.tsx":"104","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Post\\PostWrapper.tsx":"105","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Post\\PostTextWrapper.tsx":"106","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Post\\PostHeader.tsx":"107","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\ThreejsView\\ThreejsViewLoaderLogo.tsx":"108","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\ThreejsView\\ThreejsViewLoader.tsx":"109","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Image\\ImageFigure.tsx":"110","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\ThreejsView\\ThreejsViewWrapper.tsx":"111","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Image\\ImageFigcaption.tsx":"112","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Table\\TableOuter.tsx":"113","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Image\\ImageWrapper.tsx":"114","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Chart\\Chart.tsx":"115","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\TikTok\\TikTokWrapper.tsx":"116","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Embed\\EmbedWrapper.tsx":"117","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Table\\TableWrapper.tsx":"118","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Chart\\ChartWrapper.tsx":"119"},{"size":647,"mtime":1604168313291,"results":"120","hashOfConfig":"121"},{"size":3380,"mtime":1597358234245,"results":"122","hashOfConfig":"121"},{"size":1590,"mtime":1604167747469,"results":"123","hashOfConfig":"121"},{"size":239,"mtime":1597358234238,"results":"124","hashOfConfig":"121"},{"size":14445,"mtime":1608740410153,"results":"125","hashOfConfig":"121"},{"size":277,"mtime":1604167002951,"results":"126","hashOfConfig":"121"},{"size":3993,"mtime":1602092679809,"results":"127","hashOfConfig":"121"},{"size":501,"mtime":1597358234221,"results":"128","hashOfConfig":"121"},{"size":1255,"mtime":1597358234213,"results":"129","hashOfConfig":"121"},{"size":2565,"mtime":1602092663396,"results":"130","hashOfConfig":"121"},{"size":485,"mtime":1597358234218,"results":"131","hashOfConfig":"121"},{"size":602,"mtime":1597358234218,"results":"132","hashOfConfig":"121"},{"size":4024,"mtime":1602441478225,"results":"133","hashOfConfig":"121"},{"size":368,"mtime":1597358234219,"results":"134","hashOfConfig":"121"},{"size":1201,"mtime":1597358234228,"results":"135","hashOfConfig":"121"},{"size":882,"mtime":1597358234221,"results":"136","hashOfConfig":"121"},{"size":10559,"mtime":1598893905629,"results":"137","hashOfConfig":"121"},{"size":2527,"mtime":1597358234219,"results":"138","hashOfConfig":"121"},{"size":1188,"mtime":1597358234220,"results":"139","hashOfConfig":"121"},{"size":8447,"mtime":1602092733239,"results":"140","hashOfConfig":"121"},{"size":4456,"mtime":1602090839699,"results":"141","hashOfConfig":"121"},{"size":2987,"mtime":1600095007661,"results":"142","hashOfConfig":"121"},{"size":7031,"mtime":1600095007703,"results":"143","hashOfConfig":"121"},{"size":1633,"mtime":1600095007594,"results":"144","hashOfConfig":"121"},{"size":7257,"mtime":1600095007736,"results":"145","hashOfConfig":"121"},{"size":1218,"mtime":1597358234244,"results":"146","hashOfConfig":"121"},{"size":13935,"mtime":1602092782195,"results":"147","hashOfConfig":"121"},{"size":4833,"mtime":1602092217464,"results":"148","hashOfConfig":"121"},{"size":5653,"mtime":1602092774404,"results":"149","hashOfConfig":"121"},{"size":460,"mtime":1600095007667,"results":"150","hashOfConfig":"121"},{"size":635,"mtime":1598893371391,"results":"151","hashOfConfig":"121"},{"size":3278,"mtime":1602092708774,"results":"152","hashOfConfig":"121"},{"size":1109,"mtime":1600095007688,"results":"153","hashOfConfig":"121"},{"size":11333,"mtime":1602092695875,"results":"154","hashOfConfig":"121"},{"size":13021,"mtime":1599517081677,"results":"155","hashOfConfig":"121"},{"size":226,"mtime":1602092610555,"results":"156","hashOfConfig":"121"},{"size":574,"mtime":1597866677860,"results":"157","hashOfConfig":"121"},{"size":36,"mtime":1597358234240,"results":"158","hashOfConfig":"121"},{"size":298,"mtime":1597358234239,"results":"159","hashOfConfig":"121"},{"size":543,"mtime":1597358234240,"results":"160","hashOfConfig":"121"},{"size":800,"mtime":1597358234209,"results":"161","hashOfConfig":"121"},{"size":698,"mtime":1597358234221,"results":"162","hashOfConfig":"121"},{"size":945,"mtime":1597358234231,"results":"163","hashOfConfig":"121"},{"size":580,"mtime":1597358234228,"results":"164","hashOfConfig":"121"},{"size":889,"mtime":1602441024849,"results":"165","hashOfConfig":"121"},{"size":2137,"mtime":1597358234229,"results":"166","hashOfConfig":"121"},{"size":843,"mtime":1597358234230,"results":"167","hashOfConfig":"121"},{"size":613,"mtime":1597358234220,"results":"168","hashOfConfig":"121"},{"size":1606,"mtime":1602440995991,"results":"169","hashOfConfig":"121"},{"size":1243,"mtime":1597358234219,"results":"170","hashOfConfig":"121"},{"size":566,"mtime":1597358234226,"results":"171","hashOfConfig":"121"},{"size":686,"mtime":1599516792238,"results":"172","hashOfConfig":"121"},{"size":413,"mtime":1597358234225,"results":"173","hashOfConfig":"121"},{"size":376,"mtime":1597358234226,"results":"174","hashOfConfig":"121"},{"size":572,"mtime":1597358234227,"results":"175","hashOfConfig":"121"},{"size":357,"mtime":1597358234211,"results":"176","hashOfConfig":"121"},{"size":1184,"mtime":1597358234222,"results":"177","hashOfConfig":"121"},{"size":156,"mtime":1597358234217,"results":"178","hashOfConfig":"121"},{"size":555,"mtime":1598893363448,"results":"179","hashOfConfig":"121"},{"size":689,"mtime":1597358234227,"results":"180","hashOfConfig":"121"},{"size":1849,"mtime":1597515403129,"results":"181","hashOfConfig":"121"},{"size":1594,"mtime":1599515384909,"results":"182","hashOfConfig":"121"},{"size":1586,"mtime":1599516172340,"results":"183","hashOfConfig":"121"},{"size":616,"mtime":1602091737289,"results":"184","hashOfConfig":"121"},{"size":1117,"mtime":1597358234205,"results":"185","hashOfConfig":"121"},{"size":468,"mtime":1597358234234,"results":"186","hashOfConfig":"121"},{"size":1713,"mtime":1604169223379,"results":"187","hashOfConfig":"121"},{"size":1402,"mtime":1602437547671,"results":"188","hashOfConfig":"121"},{"size":334,"mtime":1597358234233,"results":"189","hashOfConfig":"121"},{"size":376,"mtime":1597358234207,"results":"190","hashOfConfig":"121"},{"size":480,"mtime":1597358234229,"results":"191","hashOfConfig":"121"},{"size":639,"mtime":1597358234230,"results":"192","hashOfConfig":"121"},{"size":720,"mtime":1597358234208,"results":"193","hashOfConfig":"121"},{"size":618,"mtime":1597358234230,"results":"194","hashOfConfig":"121"},{"size":145,"mtime":1597358234215,"results":"195","hashOfConfig":"121"},{"size":183,"mtime":1597358234234,"results":"196","hashOfConfig":"121"},{"size":146,"mtime":1597358234205,"results":"197","hashOfConfig":"121"},{"size":285,"mtime":1602091922752,"results":"198","hashOfConfig":"121"},{"size":386,"mtime":1602092039581,"results":"199","hashOfConfig":"121"},{"size":161,"mtime":1597358234215,"results":"200","hashOfConfig":"121"},{"size":796,"mtime":1597358234206,"results":"201","hashOfConfig":"121"},{"size":459,"mtime":1599516085635,"results":"202","hashOfConfig":"121"},{"size":515,"mtime":1599319752983,"results":"203","hashOfConfig":"121"},{"size":686,"mtime":1597358234211,"results":"204","hashOfConfig":"121"},{"size":520,"mtime":1597358234212,"results":"205","hashOfConfig":"121"},{"size":134,"mtime":1597358234227,"results":"206","hashOfConfig":"121"},{"size":346,"mtime":1597358234212,"results":"207","hashOfConfig":"121"},{"size":387,"mtime":1597358234236,"results":"208","hashOfConfig":"121"},{"size":1654,"mtime":1602451053755,"results":"209","hashOfConfig":"121"},{"size":352,"mtime":1597358234233,"results":"210","hashOfConfig":"121"},{"size":542,"mtime":1597358234208,"results":"211","hashOfConfig":"121"},{"size":531,"mtime":1597515585946,"results":"212","hashOfConfig":"121"},{"size":6104,"mtime":1597358234234,"results":"213","hashOfConfig":"121"},{"size":510,"mtime":1597358234207,"results":"214","hashOfConfig":"121"},{"size":1623,"mtime":1599517021628,"results":"215","hashOfConfig":"121"},{"size":762,"mtime":1597358234232,"results":"216","hashOfConfig":"121"},{"size":487,"mtime":1597358234236,"results":"217","hashOfConfig":"121"},{"size":2084,"mtime":1597358234210,"results":"218","hashOfConfig":"121"},{"size":503,"mtime":1597358234217,"results":"219","hashOfConfig":"121"},{"size":350,"mtime":1597358234233,"results":"220","hashOfConfig":"121"},{"size":873,"mtime":1597358234216,"results":"221","hashOfConfig":"121"},{"size":294,"mtime":1597358234216,"results":"222","hashOfConfig":"121"},{"size":652,"mtime":1597358234223,"results":"223","hashOfConfig":"121"},{"size":372,"mtime":1597358234223,"results":"224","hashOfConfig":"121"},{"size":751,"mtime":1602514175430,"results":"225","hashOfConfig":"121"},{"size":527,"mtime":1597358234223,"results":"226","hashOfConfig":"121"},{"size":481,"mtime":1597358234222,"results":"227","hashOfConfig":"121"},{"size":534,"mtime":1597358234235,"results":"228","hashOfConfig":"121"},{"size":474,"mtime":1597358234235,"results":"229","hashOfConfig":"121"},{"size":370,"mtime":1597358234214,"results":"230","hashOfConfig":"121"},{"size":514,"mtime":1597358234235,"results":"231","hashOfConfig":"121"},{"size":363,"mtime":1597358234213,"results":"232","hashOfConfig":"121"},{"size":359,"mtime":1597358234232,"results":"233","hashOfConfig":"121"},{"size":347,"mtime":1597358234214,"results":"234","hashOfConfig":"121"},{"size":745,"mtime":1597358234206,"results":"235","hashOfConfig":"121"},{"size":313,"mtime":1597358234236,"results":"236","hashOfConfig":"121"},{"size":481,"mtime":1597358234210,"results":"237","hashOfConfig":"121"},{"size":643,"mtime":1597358234232,"results":"238","hashOfConfig":"121"},{"size":432,"mtime":1597358234206,"results":"239","hashOfConfig":"121"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},"1ephy9a",{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"242"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"242"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"242"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"242"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"242"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"242"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"242"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"242"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"242"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"242"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\index.tsx",[],["489","490"],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\serviceWorker.ts",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\i18next.ts",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\consoleGreeting.ts",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\App.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\i18nextOptions.ts",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\contextes\\globalContext.ts",["491","492","493"],"import {\r\n  createContext,\r\n  Context,\r\n  Consumer,\r\n  Provider,\r\n  Dispatch,\r\n  SetStateAction,\r\n} from \"react\";\r\nimport i18n from \"i18next\";\r\nimport { PostProps } from \"../components/Post/Post\";\r\nimport parseJWT, { Token } from \"../other/parseJWT\";\r\nimport getToken from \"../other/getToken\";\r\n\r\nexport type GlobalContext = Context<GlobalContextCompleteValues>;\r\ntype GlobalContextConsumer = Consumer<GlobalContextCompleteValues>;\r\ntype GlobalContextProvider = Provider<GlobalContextCompleteValues>;\r\n\r\nexport type IsDarkThemeDispatcher = [\r\n  boolean,\r\n  Dispatch<SetStateAction<boolean>>\r\n];\r\nexport type IsMobileDispatcher = [boolean, Dispatch<SetStateAction<boolean>>];\r\nexport type TitleDispatcher = [string, Dispatch<SetStateAction<string>>];\r\nexport type IsSlideOutMenuOpenDispatcher = [\r\n  boolean,\r\n  Dispatch<SetStateAction<boolean>>\r\n];\r\nexport type IsOnlineDispatcher = [boolean, Dispatch<SetStateAction<boolean>>];\r\nexport type LanguageDispatcher = [string, Dispatch<SetStateAction<string>>];\r\nexport type PostsListDispatcher = [\r\n  PostProps[],\r\n  Dispatch<SetStateAction<PostProps[]>>\r\n];\r\nexport type PostsDispatcher = [Posts, Dispatch<SetStateAction<Posts>>];\r\nexport type ToSubtractDispatcher = [number, Dispatch<SetStateAction<number>>];\r\nexport type SubpagesDispatcher = [Subpages, Dispatch<SetStateAction<Subpages>>];\r\nexport type PrivilegeLevelDispatcher = [\r\n  PrivilegeLevel,\r\n  Dispatch<SetStateAction<PrivilegeLevel>>\r\n];\r\n\r\nexport type PrivilegeLevel = \"unlogged\" | \"student\" | \"admin\";\r\n\r\nexport interface Subpages {\r\n  [key: string]: {\r\n    content: string;\r\n    title: string;\r\n    displayTitle: boolean;\r\n  };\r\n}\r\n\r\nexport interface Posts {\r\n  [key: string]: Post;\r\n}\r\n\r\nexport interface Post {\r\n  content: string;\r\n  title: string;\r\n  author: string;\r\n}\r\n\r\nexport interface GlobalContextCompleteValues {\r\n  isDarkThemeDispatcher: IsDarkThemeDispatcher;\r\n  titleDispatcher: TitleDispatcher;\r\n  isSlideOutMenuOpenDispatcher: IsSlideOutMenuOpenDispatcher;\r\n  isMobileDispatcher: IsMobileDispatcher;\r\n  isOnlineDispatcher: IsOnlineDispatcher;\r\n  languageDispatcher: LanguageDispatcher;\r\n  postsListDispatcher: PostsListDispatcher;\r\n  postsDispatcher: PostsDispatcher;\r\n  toSubtractDispatcher: ToSubtractDispatcher;\r\n  subpagesDispatcher: SubpagesDispatcher;\r\n  privilegeLevelDispatcher: PrivilegeLevelDispatcher;\r\n}\r\n\r\nexport interface GlobalContextValues {\r\n  isDarkTheme: boolean;\r\n  title: string;\r\n  isSlideOutMenuOpen: boolean;\r\n  isMobile: boolean;\r\n  isOnline: boolean;\r\n  language: string;\r\n  postsList: PostProps[];\r\n  posts: Posts;\r\n  subpages: Subpages;\r\n  toSubtract: number;\r\n  privilegeLevel: PrivilegeLevel;\r\n}\r\n\r\nlet parsedTokenRole: PrivilegeLevel;\r\nconst token: string = getToken();\r\ntry {\r\n  const parsedToken: Token = parseJWT(token);\r\n  if (parsedToken && parsedToken.role) {\r\n    parsedTokenRole = parsedToken.role;\r\n  } else {\r\n    parsedTokenRole = \"unlogged\";\r\n  }\r\n} catch (err) {\r\n  parsedTokenRole = \"unlogged\";\r\n}\r\n\r\nexport const initialGlobalStoreValue: GlobalContextValues = {\r\n  isDarkTheme:\r\n    window.localStorage.getItem(\"isDarkTheme\") === \"true\" ? true : false,\r\n  title: \"\",\r\n  isSlideOutMenuOpen: false,\r\n  isMobile: window.innerWidth < 768 ? true : false,\r\n  isOnline: window.navigator.onLine,\r\n  language:\r\n    i18n.language || window.localStorage.i18nextLng || window.navigator.language\r\n      ? (\r\n          i18n.language ||\r\n          window.localStorage.i18nextLng ||\r\n          window.navigator.language\r\n        ).slice(0, 2)\r\n      : \"pl\",\r\n  postsList: [],\r\n  posts: {},\r\n  subpages: {},\r\n  toSubtract: 0,\r\n  privilegeLevel: parsedTokenRole,\r\n};\r\n\r\nconst GlobalContext: GlobalContext = createContext<GlobalContextCompleteValues>(\r\n  (initialGlobalStoreValue as unknown) as GlobalContextCompleteValues\r\n);\r\nexport const GlobalContextConsumer: GlobalContextConsumer =\r\n  GlobalContext.Consumer;\r\nexport const GlobalContextProvider: GlobalContextProvider =\r\n  GlobalContext.Provider;\r\n\r\nexport default GlobalContext;\r\n","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Overlay.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\GlobalStyle.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\PrivateRoute.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MainSection\\MainSectionBottomSpacer.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MainSection\\MainSection.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\DesktopTopMenu\\DesktopTopMenu.tsx",["494"],"import React, { FC, useContext, useState } from \"react\";\r\nimport Icon from \"@mdi/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { iconSize } from \"../../other/variables\";\r\nimport {\r\n  mdiTableSearch,\r\n  mdiBookOpenPageVariant,\r\n  mdiHome,\r\n  mdiFacebook,\r\n  mdiYoutube,\r\n  mdiWhiteBalanceSunny,\r\n  mdiWeatherNight,\r\n} from \"@mdi/js\";\r\nimport { useTranslation, UseTranslationResponse } from \"react-i18next\";\r\nimport DesktopTopMenuHeader from \"./DesktopTopMenuHeader\";\r\nimport GlobalContext, {\r\n  GlobalContextCompleteValues,\r\n  IsDarkThemeDispatcher,\r\n} from \"../../contextes/globalContext\";\r\nimport toggleDarkTheme from \"../../other/toggleDarkTheme\";\r\nimport scrollTop from \"../../other/scrollTop\";\r\n\r\ninterface DesktopTopMenuProps { }\r\n\r\nconst DesktopTopMenu: FC<DesktopTopMenuProps> = (): JSX.Element => {\r\n  const { t }: UseTranslationResponse = useTranslation();\r\n  const { isDarkThemeDispatcher }: GlobalContextCompleteValues = useContext(\r\n    GlobalContext\r\n  );\r\n  const [\r\n    isDarkTheme,\r\n    setIsDarkTheme,\r\n  ]: IsDarkThemeDispatcher = isDarkThemeDispatcher;\r\n  const colorThemeIcon: string = isDarkTheme\r\n    ? mdiWhiteBalanceSunny\r\n    : mdiWeatherNight;\r\n  const facebookTitle: string = t(\"menu.facebook\");\r\n  const vulcanTitle: string = t(\"menu.vulcan\");\r\n  const lessonPlanTitle: string = t(\"menu.lesson-plan\");\r\n  const youtubeTitle: string = t(\"menu.youtube\");\r\n  const homeTitle: string = t(\"menu.home\");\r\n  const toDarkColorThemeTitle: string = t(\"menu.color-theme.to-dark\");\r\n  const toLightColorThemeTitle: string = t(\"menu.color-theme.to-light\");\r\n  const colorThemeTitle: string = isDarkTheme\r\n    ? toLightColorThemeTitle\r\n    : toDarkColorThemeTitle;\r\n  return (\r\n    <DesktopTopMenuHeader isDarkTheme={isDarkTheme}>\r\n      <a\r\n        rel=\"noopener noreferrer\"\r\n        href=\"https://www.youtube.com/channel/UCMzNuGK3NB6CmNn-JlRvWww\"\r\n        aria-label={youtubeTitle}\r\n        title={youtubeTitle}\r\n      >\r\n        <Icon\r\n          path={mdiYoutube}\r\n          title={youtubeTitle}\r\n          aria-label={youtubeTitle}\r\n          size={iconSize}\r\n          color=\"#fff\"\r\n        />\r\n      </a>\r\n      <a\r\n        rel=\"noopener noreferrer\"\r\n        href=\"https://www.facebook.com/rybnikzsb/\"\r\n        title={facebookTitle}\r\n        aria-label={facebookTitle}\r\n      >\r\n        <Icon\r\n          path={mdiFacebook}\r\n          title={facebookTitle}\r\n          aria-label={facebookTitle}\r\n          size={iconSize}\r\n          color=\"#fff\"\r\n        />\r\n      </a>\r\n      <div\r\n        title={colorThemeTitle}\r\n        aria-label={colorThemeTitle}\r\n        onClick={(): void => toggleDarkTheme(isDarkTheme, setIsDarkTheme)}\r\n      >\r\n        <Icon\r\n          path={colorThemeIcon}\r\n          title={colorThemeTitle}\r\n          aria-label={colorThemeTitle}\r\n          size={iconSize}\r\n          color=\"#fff\"\r\n        />\r\n      </div>\r\n      <a\r\n        rel=\"noopener noreferrer\"\r\n        href=\"https://uonetplus.vulcan.net.pl/rybnik\"\r\n        title={vulcanTitle}\r\n        aria-label={vulcanTitle}\r\n      >\r\n        <Icon\r\n          path={mdiBookOpenPageVariant}\r\n          title={vulcanTitle}\r\n          aria-label={vulcanTitle}\r\n          size={iconSize}\r\n          color=\"#fff\"\r\n        />\r\n      </a>\r\n      <a\r\n        rel=\"noopener noreferrer\"\r\n        href=\"https://planlekcjizsb.snowdropcurvemaster.now.sh/\"\r\n        title={lessonPlanTitle}\r\n        aria-label={lessonPlanTitle}\r\n      >\r\n        <Icon\r\n          path={mdiTableSearch}\r\n          title={lessonPlanTitle}\r\n          aria-label={lessonPlanTitle}\r\n          size={iconSize}\r\n          color=\"#fff\"\r\n        />\r\n      </a>\r\n      <Link\r\n        to=\"/\"\r\n        title={homeTitle}\r\n        aria-label={homeTitle}\r\n        onClick={(): void => scrollTop()}\r\n      >\r\n        <Icon\r\n          path={mdiHome}\r\n          aria-label={homeTitle}\r\n          title={homeTitle}\r\n          size={iconSize}\r\n          color=\"#fff\"\r\n        />\r\n      </Link>\r\n    </DesktopTopMenuHeader>\r\n  );\r\n};\r\n\r\nexport default DesktopTopMenu;\r\n","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MainSection\\MainSectionContent.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuButton.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MobileUpsideMenu\\MobileUpsideMenu.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenu.tsx",["495"],"import React, {\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  FC,\r\n  Dispatch,\r\n  SetStateAction,\r\n} from \"react\";\r\nimport SlideOutMenuWrapper from \"./SlideOutMenuWrapper\";\r\nimport GlobalContext, {\r\n  GlobalContextCompleteValues,\r\n  IsDarkThemeDispatcher,\r\n  IsSlideOutMenuOpenDispatcher,\r\n  LanguageDispatcher,\r\n  PrivilegeLevelDispatcher,\r\n} from \"../../contextes/globalContext\";\r\nimport OuterLink from \"./SlideOutMenuOuterLink\";\r\nimport SlideOutMenuHeightFixer from \"./SlideOutMenuHeightFixer\";\r\nimport InnerLink from \"./SlideOutMenuInnerLink\";\r\nimport SlideOutMenuCategory from \"./SlideOutMenuCategory\";\r\nimport { toast } from \"react-toastify\";\r\n\r\ninterface SlideOutMenuProps {}\r\n\r\ntype TryRequest = () => Promise<void>;\r\ntype Subpage = {\r\n  route: string;\r\n  title: string;\r\n  onlyForMobile: boolean;\r\n  isInnerLink: boolean;\r\n  category: string | null;\r\n};\r\ntype Routes = {\r\n  [key: string]: Subpage | ExtendedCategory;\r\n};\r\ntype Category = {\r\n  title: string;\r\n  name: string;\r\n  onlyForMobile: boolean;\r\n};\r\ntype ExtendedCategory = {\r\n  category?: Category;\r\n  children: Subpage[];\r\n};\r\ntype RoutesDispatcher = [Routes, Dispatch<SetStateAction<Routes>>];\r\n\r\nconst SlideOutMenu: FC<SlideOutMenuProps> = (): JSX.Element => {\r\n  const {\r\n    isDarkThemeDispatcher,\r\n    isSlideOutMenuOpenDispatcher,\r\n    languageDispatcher,\r\n    privilegeLevelDispatcher,\r\n    isMobileDispatcher,\r\n  }: GlobalContextCompleteValues = useContext(GlobalContext);\r\n  const [\r\n    privilegeLevel,\r\n    setPrivilegeLevel,\r\n  ]: PrivilegeLevelDispatcher = privilegeLevelDispatcher;\r\n  const [isDarkTheme]: IsDarkThemeDispatcher = isDarkThemeDispatcher;\r\n  const [isMobile] = isMobileDispatcher;\r\n  const [\r\n    isSlideOutMenuOpen,\r\n  ]: IsSlideOutMenuOpenDispatcher = isSlideOutMenuOpenDispatcher;\r\n  const [language]: LanguageDispatcher = languageDispatcher;\r\n  const [routes, setRoutes]: RoutesDispatcher = useState({\r\n    \"ZSB Account\": {\r\n      children: [],\r\n      category: {\r\n        title: \"Konto ZSB\",\r\n        name: \"ZSB Account\",\r\n        onlyForMobile: false,\r\n      },\r\n    },\r\n    \"Social Media\": {\r\n      children: [\r\n        {\r\n          title: \"Facebook\",\r\n          route: \"https://www.facebook.com/rybnikzsb/\",\r\n          onlyForMobile: true,\r\n          isInnerLink: false,\r\n          category: \"Social Media\",\r\n        },\r\n        {\r\n          title: \"Youtube\",\r\n          route: \"https://www.youtube.com/channel/UCMzNuGK3NB6CmNn-JlRvWww\",\r\n          onlyForMobile: true,\r\n          isInnerLink: false,\r\n          category: \"Social Media\",\r\n        },\r\n      ],\r\n      category: {\r\n        title: \"Media Społecznościowe\",\r\n        name: \"Social Media\",\r\n        onlyForMobile: true,\r\n      },\r\n    },\r\n  } as Routes);\r\n  useEffect((): void => {\r\n    const tryRequest: TryRequest = async (): Promise<void> => {\r\n      try {\r\n        const categoryRes: Response = await fetch(\r\n          `${process.env.REACT_APP_API_URL}/api/get-subpages-categories?language=${language}`\r\n        );\r\n        const subpagesRes: Response = await fetch(\r\n          `${process.env.REACT_APP_API_URL}/api/get-subpages-routes?language=${language}`\r\n        );\r\n        const categoryData: Category[] = await categoryRes.json();\r\n        const supagesData: Subpage[] = await subpagesRes.json();\r\n        const routesTemp: Routes = { ...routes };\r\n        categoryData &&\r\n          categoryData.forEach((el: Category): void => {\r\n            routesTemp[el.name] = {\r\n              children: [],\r\n              category: el,\r\n            };\r\n          });\r\n        supagesData &&\r\n          supagesData.forEach((el: Subpage): void => {\r\n            if (el.category === null) {\r\n              routesTemp[el.title] = el;\r\n            } else {\r\n              (routesTemp[el.category] as ExtendedCategory).children.push(el);\r\n            }\r\n          });\r\n        setRoutes(routesTemp);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    tryRequest();\r\n  }, [language, setRoutes]);\r\n  return (\r\n    <SlideOutMenuWrapper\r\n      isDarkTheme={isDarkTheme}\r\n      isSlideOutMenuOpen={isSlideOutMenuOpen}\r\n    >\r\n      <SlideOutMenuHeightFixer isDarkTheme={isDarkTheme}>\r\n        {routes &&\r\n          Object.keys(routes).map(\r\n            (key: string, index: number): JSX.Element => {\r\n              if (\r\n                Array.isArray(\r\n                  ((routes as any)[key as string] as ExtendedCategory).children\r\n                )\r\n              ) {\r\n                let categoryKey: number = 0;\r\n                const categoryChildren: JSX.Element[] = ((routes as any)[\r\n                  key\r\n                ] as ExtendedCategory).children.map(\r\n                  (\r\n                    { isInnerLink, title, route, onlyForMobile }: Subpage,\r\n                    key: number\r\n                  ): JSX.Element => {\r\n                    categoryKey += 1;\r\n                    return isInnerLink ? (\r\n                      <InnerLink\r\n                        title={title}\r\n                        route={`/subpage/${route}`}\r\n                        onlyForMobile={onlyForMobile}\r\n                        key={key}\r\n                      />\r\n                    ) : (\r\n                      <OuterLink title={title} route={route} key={key} />\r\n                    );\r\n                  }\r\n                );\r\n                if (key === \"ZSB Account\") {\r\n                  const SingInOrSingOffButton: JSX.Element =\r\n                    privilegeLevel === \"unlogged\" ? (\r\n                      <InnerLink\r\n                        route=\"/login\"\r\n                        title=\"Zaloguj się\"\r\n                        key={categoryKey}\r\n                      />\r\n                    ) : (\r\n                      <InnerLink\r\n                        route=\"/\"\r\n                        title=\"Wyloguj się\"\r\n                        key={categoryKey}\r\n                        onClick={(): void => {\r\n                          window.localStorage.removeItem(\"token\");\r\n                          window.localStorage.removeItem(\"stayLoggedIn\");\r\n                          setPrivilegeLevel(\"unlogged\");\r\n                          !isMobile && toast.success(\"Wylogowałeś się\");\r\n                        }}\r\n                      />\r\n                    );\r\n                  categoryChildren.unshift(SingInOrSingOffButton);\r\n                  categoryKey += 1;\r\n                  const ManagePostsButton: JSX.Element =\r\n                    privilegeLevel === \"admin\" ? (\r\n                      <InnerLink\r\n                        route=\"/manage-posts\"\r\n                        title=\"Zarządzaj postami\"\r\n                        key={categoryKey}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    );\r\n                  categoryChildren.push(ManagePostsButton);\r\n                  categoryKey += 1;\r\n                  const AddPostButton: JSX.Element =\r\n                    privilegeLevel === \"admin\" ? (\r\n                      <InnerLink\r\n                        route=\"/add-post\"\r\n                        title=\"Dodaj post\"\r\n                        key={categoryKey}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    );\r\n                  categoryChildren.push(AddPostButton);\r\n                  categoryKey += 1;\r\n                  const ManageSubpagesButton: JSX.Element =\r\n                    privilegeLevel === \"admin\" ? (\r\n                      <InnerLink\r\n                        route=\"/manage-subpages\"\r\n                        title=\"Zarządzaj podstronami\"\r\n                        key={categoryKey}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    );\r\n                  categoryChildren.push(ManageSubpagesButton);\r\n                  categoryKey += 1;\r\n                  const ManageUsersButton: JSX.Element =\r\n                    privilegeLevel === \"admin\" ? (\r\n                      <InnerLink\r\n                        route=\"/manage-users\"\r\n                        title=\"Zarządzaj użytkownikami\"\r\n                        key={categoryKey}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    );\r\n                  categoryChildren.push(ManageUsersButton);\r\n                  categoryKey += 1;\r\n                  const AddUsersPage: JSX.Element =\r\n                    privilegeLevel === \"admin\" ? (\r\n                      <InnerLink\r\n                        route=\"/add-users\"\r\n                        title=\"Dodaj użytkowników\"\r\n                        key={categoryKey}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    );\r\n                  categoryChildren.push(AddUsersPage);\r\n                  categoryKey += 1;\r\n                  const ManageLessonPlanButton: JSX.Element =\r\n                    privilegeLevel === \"admin\" ? (\r\n                      <InnerLink\r\n                        route=\"/manage-lesson-plan\"\r\n                        title=\"Zarządzaj planem lekcji\"\r\n                        key={categoryKey}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    );\r\n                  categoryChildren.push(ManageLessonPlanButton);\r\n                }\r\n                const { title, onlyForMobile }: Category = (routes as any)[key]\r\n                  .category as Category;\r\n                const category: JSX.Element = (\r\n                  <SlideOutMenuCategory\r\n                    title={title}\r\n                    onlyForMobile={onlyForMobile}\r\n                    key={index}\r\n                  >\r\n                    {categoryChildren}\r\n                  </SlideOutMenuCategory>\r\n                );\r\n                return category;\r\n              } else {\r\n                const {\r\n                  isInnerLink,\r\n                  title,\r\n                  route,\r\n                  onlyForMobile,\r\n                }: Subpage = (routes as any)[key] as Subpage;\r\n                if (isInnerLink) {\r\n                  return (\r\n                    <InnerLink\r\n                      title={title}\r\n                      route={route}\r\n                      onlyForMobile={onlyForMobile}\r\n                      key={index}\r\n                    />\r\n                  );\r\n                }\r\n                return <OuterLink title={title} route={route} key={index} />;\r\n              }\r\n            }\r\n          )}\r\n      </SlideOutMenuHeightFixer>\r\n    </SlideOutMenuWrapper>\r\n  );\r\n};\r\n\r\nexport default SlideOutMenu;\r\n","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MobileBottomMenu\\MobileBottomMenu.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MobileColorThemeButton\\MobileColorThemeButton.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\DeletePostPage.tsx",["496","497"],"import {\n  FC,\n  useEffect,\n  useState,\n  useContext,\n  SetStateAction,\n  Dispatch,\n  useCallback,\n} from \"react\";\nimport React from \"react\";\nimport Page from \"../components/Page\";\nimport { mdiPlus, mdiPencil, mdiDelete } from \"@mdi/js\";\nimport { toast } from \"react-toastify\";\nimport Button from \"../components/Button/Button\";\nimport Section from \"../components/Section\";\nimport Form from \"../components/Form\";\nimport GlobalContext from \"../contextes/globalContext\";\nimport Select from \"../components/Select/Select\";\nimport getToken from \"../other/getToken\";\n\ntype PostAction = \"deletePolish\" | \"deleteNotPolish\";\n\ntype PostActionDispatcher = [PostAction, SetStateAction<Dispatch<PostAction>>];\n\nexport interface DeletePostPageProps {}\n\nconst DeletePostPage: FC<DeletePostPageProps> = (): JSX.Element => {\n  const title: string = \"Usuń post\";\n  const [selectedPostTitle, setSelectedPostTitle] = useState(\"\");\n  const [postsTitles, setPostsTitles] = useState([]);\n  const [postAction, setPostAction]: PostActionDispatcher = useState(\n    \"deletePolish\" as PostAction\n  );\n  const { isMobileDispatcher } = useContext(GlobalContext);\n  const [isMobile] = isMobileDispatcher;\n  const getPostsTitles = useCallback(() => {\n    const tryRequest = async () => {\n      try {\n        const res: Response = await fetch(\n          `${process.env.REACT_APP_API_URL}/api/get-posts-titles?action=getPolishPostsTitles`\n        );\n        const data = await res.json();\n        setPostsTitles(data);\n      } catch (err) {}\n    };\n    if (postAction === \"deleteNotPolish\") {\n      tryRequest();\n    }\n  }, [postAction]);\n  useEffect(() => {\n    getPostsTitles();\n  }, [setPostAction, postAction, getPostsTitles]);\n  return (\n    <Page title={title}>\n      <h2>{title}:</h2>\n      <Section>\n        <Form>\n          <Select\n            label=\"Wybierz akcję\"\n            onChange={(e) => {\n              const { value } = e.target;\n              setPostAction(value as PostAction);\n            }}\n          >\n            <option value=\"deletePolish\">Usuń post w języku polskim</option>\n            <option value=\"deleteNotPolish\">Usuń post w języku obcym</option>\n          </Select>\n          <Select\n            label=\"Wybierz post do usunięcia\"\n            value={selectedPostTitle}\n            onChange={(e) => setSelectedPostTitle(e.target.value)}\n          >\n            <option disabled></option>\n            {postsTitles &&\n              postsTitles.map(({ title, id }, index) => {\n                return (\n                  <option key={index} value={id}>\n                    {title}\n                  </option>\n                );\n              })}\n          </Select>\n          {/*(postAction === \"addNotPolish\" ||\n            postAction === \"editNotPolish\" ||\n            postAction === \"deleteNotPolish\" ||\n            postAction === \"deletePolish\") && (\n            <Select\n              label=\"Język\"\n              value={postLanguage}\n              onChange={(e) => setPostLanguage(e.target.value)}\n              disabled={\n                postAction === \"deleteNotPolish\" ||\n                postAction === \"deletePolish\"\n                  ? true\n                  : false\n              }\n            >\n              <option disabled></option>\n              <option value=\"af\">Afrikaans</option>\n              <option value=\"sq\">Albanian</option>\n              <option value=\"ar\">Arabic</option>\n              <option value=\"hy\">Armenian</option>\n              <option value=\"eu\">Basque</option>\n              <option value=\"bn\">Bengali</option>\n              <option value=\"bg\">Bulgarian</option>\n              <option value=\"ca\">Catalan</option>\n              <option value=\"km\">Cambodian</option>\n              <option value=\"zh\">Chinese (Mandarin)</option>\n              <option value=\"hr\">Croatian</option>\n              <option value=\"cs\">Czech</option>\n              <option value=\"da\">Danish</option>\n              <option value=\"nl\">Dutch</option>\n              <option value=\"en\">English</option>\n              <option value=\"et\">Estonian</option>\n              <option value=\"jf\">Fiji</option>\n              <option value=\"fi\">Finnish</option>\n              <option value=\"fr\">French</option>\n              <option value=\"ka\">Georgian</option>\n              <option value=\"de\">German</option>\n              <option value=\"el\">Greek</option>\n              <option value=\"gu\">Gujarati</option>\n              <option value=\"he\">Hebrew</option>\n              <option value=\"hi\">Hindi</option>\n              <option value=\"hu\">Hungarian</option>\n              <option value=\"is\">Icelandic</option>\n              <option value=\"id\">Indonesian</option>\n              <option value=\"ga\">Irish</option>\n              <option value=\"it\">Italian</option>\n              <option value=\"ja\">Japanese</option>\n              <option value=\"jw\">Javanese</option>\n              <option value=\"ko\">Korean</option>\n              <option value=\"la\">Latin</option>\n              <option value=\"lv\">Latvian</option>\n              <option value=\"lt\">Lithuanian</option>\n              <option value=\"mk\">Macedonian</option>\n              <option value=\"ms\">Malay</option>\n              <option value=\"ml\">Malayalam</option>\n              <option value=\"mt\">Maltese</option>\n              <option value=\"mi\">Maori</option>\n              <option value=\"mr\">Marathi</option>\n              <option value=\"mn\">Mongolian</option>\n              <option value=\"ne\">Nepali</option>\n              <option value=\"no\">Norwegian</option>\n              <option value=\"fa\">Persian</option>\n              <option value=\"pt\">Portuguese</option>\n              <option value=\"pa\">Punjabi</option>\n              <option value=\"qu\">Quechua</option>\n              <option value=\"ro\">Romanian</option>\n              <option value=\"ru\">Russian</option>\n              <option value=\"sm\">Samoan</option>\n              <option value=\"sr\">Serbian</option>\n              <option value=\"sk\">Slovak</option>\n              <option value=\"sl\">Slovenian</option>\n              <option value=\"es\">Spanish</option>\n              <option value=\"sw\">Swahili</option>\n              <option value=\"sv\">Swedish</option>\n              <option value=\"ta\">Tamil</option>\n              <option value=\"tt\">Tatar</option>\n              <option value=\"te\">Telugu</option>\n              <option value=\"th\">Thai</option>\n              <option value=\"bo\">Tibetan</option>\n              <option value=\"to\">Tonga</option>\n              <option value=\"tr\">Turkish</option>\n              <option value=\"uk\">Ukrainian</option>\n              <option value=\"ur\">Urdu</option>\n              <option value=\"uz\">Uzbek</option>\n              <option value=\"vi\">Vietnamese</option>\n              <option value=\"cy\">Welsh</option>\n              <option value=\"xh\">Xhosa</option>\n            </Select>\n            )*/}\n          <Button\n            title=\"Usuń post\"\n            icon={mdiDelete}\n            onClick={() => {\n              const errorDuringAddingPost = () => {\n                toast.error(\"Wystąpił błąd podczas dodawania postu\");\n              };\n              const tryRequest = async (): Promise<void> => {\n                !isMobile && toast.info(\"Przetwarzam żądanie\");\n                try {\n                  const res: Response = await fetch(\n                    `${process.env.REACT_APP_API_URL}/api/delete-post?action=${\n                      postAction === \"deletePolish\"\n                        ? \"deletePolishPost\"\n                        : \"deleteNotPolishPost\"\n                    }`,\n                    {\n                      method: \"POST\",\n                      headers: {\n                        Authorization: getToken(),\n                        \"Content-Type\": \"application/json\",\n                        Accept: \"application/json\",\n                      },\n                      body: JSON.stringify({}),\n                    }\n                  );\n                  const { status }: Response = res;\n                  if (status === 200) {\n                    !isMobile && toast.success(\"Usunąłeś post\");\n                  } else {\n                    !isMobile && errorDuringAddingPost();\n                  }\n                } catch (err) {\n                  !isMobile && errorDuringAddingPost();\n                }\n              };\n              tryRequest();\n            }}\n          />\n        </Form>\n      </Section>\n    </Page>\n  );\n};\n\nexport default DeletePostPage;\n","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\AddSubpagePage.tsx",["498","499","500"],"import Page from \"../components/Page\";\nimport React, { FC, useState, SetStateAction, Dispatch } from \"react\";\nimport Section from \"../components/Section\";\nimport Form from \"../components/Form\";\nimport Select from \"../components/Select/Select\";\nimport InputBox from \"../components/InputBox/InputBox\";\nimport Button from \"../components/Button/Button\";\nimport { mdiPlus } from \"@mdi/js\";\n\ntype SubpageAction = \"addPolish\" | \"addNotPolish\";\n\ntype SubpageActionDispatcher = [\n  SubpageAction,\n  SetStateAction<Dispatch<SubpageAction>>\n];\n\nexport interface AddSubpagePageProps { }\n\nconst AddSubpagePage: FC<AddSubpagePageProps> = () => {\n  const title: string = \"Dodaj podstronę\";\n  const [subpageAction, setSubpageAction]: SubpageActionDispatcher = useState(\n    \"addPolish\" as SubpageAction\n  );\n  const [subpageTitle, setSubpageTitle] = useState(\"\");\n  const [subpageRoute, setSetSubpageRoute] = useState(\"\");\n  const [subpageDisplayTitle, setSubpageDisplayTitle] = useState(true);\n  const [createMenuLink, setCreateMenuLink] = useState(true);\n  const [menuLinkName, setMenuLinkName] = useState(\"\");\n  const [menuLinkCategory, setMenuLinkCategory] = useState(\"\");\n  const [menuNewCategory, setMenuNewCategory] = useState(false);\n  return (\n    <Page title={title}>\n      <h2>{title}:</h2>\n      <Section>\n        <Form>\n          <Select\n            label=\"Wybierz akcję\"\n            onChange={(e) => {\n              const { value } = e.target;\n              setSubpageAction(value as SubpageAction);\n            }}\n          >\n            <option value=\"addPolish\">\n              Dodaj nową podstronę w języku polskim\n            </option>\n            <option value=\"addNotPolish\">\n              Dodaj nową podstronę w języku obcym\n            </option>\n          </Select>\n          <InputBox\n            label=\"Tytuł\"\n            value={subpageTitle}\n            placeholder=\"Maksymalnie 255 znaków\"\n            maxLength={255}\n            onChange={(e) => setSubpageTitle(e.target.value)}\n          />\n          <InputBox\n            label=\"Ścieżka\"\n            value={subpageRoute}\n            placeholder=\"Maksymalnie 255 znaków\"\n            maxLength={255}\n            onChange={(e) => setSetSubpageRoute(e.target.value)}\n          />\n          <Select\n            label=\"Wyświetlić tytuł\"\n            onChange={(e) => {\n              const { value } = e.target;\n              const isTrue: boolean = value === \"true\";\n              setSubpageDisplayTitle(isTrue);\n            }}\n          >\n            <option value=\"true\">Tak</option>\n            <option value=\"false\">Nie</option>\n          </Select>\n          <Select\n            label=\"Utworzyć link w menu\"\n            onChange={(e) => {\n              const { value } = e.target;\n              const isTrue: boolean = value === \"true\";\n              setCreateMenuLink(isTrue);\n            }}\n          >\n            <option value=\"true\">Tak</option>\n            <option value=\"false\">Nie</option>\n          </Select>\n          {createMenuLink && (\n            <>\n              <InputBox\n                label=\"Nazwa linku w menu\"\n                value={menuLinkName}\n                placeholder=\"Maksymalnie 255 znaków\"\n                maxLength={255}\n                onChange={(e) => setMenuLinkName(e.target.value)}\n              />\n              <Select\n                label=\"Kategoria\"\n                onChange={(e) => {\n                  const { value } = e.target;\n                  if (value === \"noCategory\") {\n                    setMenuLinkCategory(\"\");\n                  } else if (value === \"newCategory\") {\n                    setMenuNewCategory(true);\n                  } else {\n                    setMenuLinkCategory(value);\n                  }\n                }}\n              >\n                <option value=\"noCategory\">Brak</option>\n                <option value=\"newCategory\">Nowa kategoria</option>\n              </Select>\n              {menuNewCategory && (\n                <InputBox\n                  label=\"Nazwa kategorii\"\n                  value={menuLinkName}\n                  placeholder=\"Maksymalnie 255 znaków\"\n                  maxLength={255}\n                  onChange={(e) => setMenuLinkName(e.target.value)}\n                />\n              )}\n            </>\n          )}\n          <Button title=\"Dodaj postronę\" icon={mdiPlus} onClick={() => { }} />\n        </Form>\n      </Section>\n    </Page>\n  );\n};\n\nexport default AddSubpagePage;\n","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\MainPage.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\PostPage.tsx",["501"],"import React, {\n  useState,\n  useEffect,\n  Dispatch,\n  SetStateAction,\n  FC,\n  useContext,\n} from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { compiler } from \"markdown-to-jsx\";\nimport Page from \"../components/Page\";\nimport Section from \"../components/Section\";\nimport TextBlock from \"../components/TextBlock/TextBlock\";\nimport CodeBlock from \"../components/CodeBlock/CodeBlock\";\nimport markdownOptions from \"../other/makrdownOptions\";\nimport { useTranslation, UseTranslationResponse } from \"react-i18next\";\nimport GlobalContext, {\n  GlobalContextCompleteValues,\n  LanguageDispatcher,\n  PostsDispatcher,\n  Post,\n  Posts,\n  IsOnlineDispatcher,\n} from \"../contextes/globalContext\";\nimport Link from \"../components/Link/Link\";\n\ntype TryRequest = () => Promise<void>;\ntype PostTitleDispatcher = [string, Dispatch<SetStateAction<string>>];\ntype MarkdownDispatcher = [string, Dispatch<SetStateAction<string>>];\ntype AuthorDispatcher = [string, Dispatch<SetStateAction<string>>];\ntype ParseErrorDispatcher = [boolean, Dispatch<SetStateAction<boolean>>];\n\ninterface PostPageRouteProps {\n  id: string;\n}\n\nexport interface PostPageProps\n  extends RouteComponentProps<PostPageRouteProps> {}\n\nconst PostPage: FC<PostPageProps> = ({\n  match: {\n    params: { id },\n  },\n}: PostPageProps): JSX.Element => {\n  const {\n    languageDispatcher,\n    postsDispatcher,\n    isOnlineDispatcher,\n  }: GlobalContextCompleteValues = useContext(GlobalContext);\n  const [isOnline]: IsOnlineDispatcher = isOnlineDispatcher;\n  const [language]: LanguageDispatcher = languageDispatcher;\n  const [posts, setPosts]: PostsDispatcher = postsDispatcher;\n  const parsedLocationId: number = id ? parseInt(id) : NaN;\n  const isParsedLocationValid: boolean = isNaN(parsedLocationId) ? false : true;\n  const [postTitle, setPostTitle]: PostTitleDispatcher = useState(\"\");\n  const [author, setAuthor]: AuthorDispatcher = useState(\"\");\n  const [parseError, setParseError]: ParseErrorDispatcher = useState(\n    false\n  ) as ParseErrorDispatcher;\n  const [notFoundError, setNotFoundError] = useState(false);\n  const { t }: UseTranslationResponse = useTranslation();\n  const [compiledMarkdownRender, setCompiledMarkdownRender] = useState(<></>);\n  useEffect((): void => {\n    setNotFoundError(false);\n    const setMarkdown = (content: string): void => {\n      try {\n        const compiledMarkdown: JSX.Element = compiler(\n          content,\n          markdownOptions\n        );\n        const fixedCompiledMarkdown: JSX.Element =\n          compiledMarkdown.key === \"outer\"\n            ? typeof compiledMarkdown.props.children === \"string\"\n              ? compiledMarkdown\n              : compiledMarkdown.props.children\n            : compiledMarkdown;\n        setCompiledMarkdownRender(fixedCompiledMarkdown);\n        setParseError(false);\n      } catch (err) {\n        console.error(err);\n        setParseError(true);\n      }\n    };\n    if (!posts[parsedLocationId] && isParsedLocationValid) {\n      const tryRequest: TryRequest = async (): Promise<void> => {\n        const controller: AbortController = new AbortController();\n        const signal: AbortSignal = controller.signal;\n        const res: Response = await fetch(\n          `${process.env.REACT_APP_API_URL}/api/get-post?id=${parsedLocationId}&language=${language}`,\n          {\n            method: \"GET\",\n            signal: signal,\n          }\n        );\n        try {\n          const { title, content, author }: Post = await res.json();\n          setMarkdown(content);\n          setPostTitle(title);\n          setAuthor(author);\n          const fixedPosts: Posts = { ...posts };\n          fixedPosts[parsedLocationId] = {\n            title: title,\n            content: content,\n            author: author,\n          };\n          setPosts(fixedPosts);\n        } catch (err) {\n          controller.abort();\n          const { status }: Response = res;\n          if (status === 404) {\n            setNotFoundError(true);\n          }\n        }\n      };\n      tryRequest();\n    } else if (isParsedLocationValid) {\n      const { author, title, content }: Post = posts[parsedLocationId];\n      setMarkdown(content);\n      setAuthor(author);\n      setPostTitle(title);\n    }\n  }, [\n    parsedLocationId,\n    setPostTitle,\n    language,\n    posts,\n    setPosts,\n    isParsedLocationValid,\n    setNotFoundError,\n    setParseError,\n  ]);\n  const codeBlockValue: string = `${window.location.origin}${\n    window.location.pathname\n  }/${isOnline ? t(\"post-page.id-of-post\") : \"numerPosta\"}`;\n  const firstLineErrorText: string = isOnline\n    ? t(\"post-page.error-text\")\n    : \"Nie jesteśmy w stanie wyświetlić zawartości, jeśli nie podałeś parametru określającego numer posta. Proszę uzupełnij URL o ten parametr.\";\n  const secondLineErrorText: string = isOnline\n    ? t(\"post-page.error-annotation\")\n    : \"Jeśli sądzisz, że jest to nieprawidłowe działanie witryny zgłoś błąd po przez link poniżej.\";\n  const errorLink: string = isOnline\n    ? t(\"quick-actions.report-issue\")\n    : \"Zgłoś błąd\";\n  const authorText: string = `${t(\"post-page.author\")}: ${author}`;\n  return (\n    <Page title={postTitle}>\n      <h2>\n        {!isParsedLocationValid || parseError || notFoundError\n          ? parseError || notFoundError\n            ? parseError\n              ? \"Wystąpił błąd podczas przetwarzania treści:\"\n              : \"Nie znaleziono posta:\"\n            : \"Podaj parametr, żeby przenieść się do odpowiedniego posta:\"\n          : postTitle}\n      </h2>\n      <Section>\n        {!isParsedLocationValid || parseError || notFoundError ? (\n          parseError || notFoundError ? (\n            parseError ? (\n              <>\n                <TextBlock value=\"Nie jesteśmy w stanie wyświetlić treści. Najprawdopodobniej błąd leży po stronie serwera.\" />\n                <Link\n                  title={errorLink}\n                  href=\"https://github.com/KrzysztofZawisla/ZSBRybnik/issues\"\n                />\n              </>\n            ) : (\n              <>\n                <TextBlock value=\"Niestety nie udało nam się odnaleźć postu skojarzonego z tym adresem. Jeśli sądzisz, że jest to nieprawidłowe działanie witryny zgłoś błąd po przez link poniżej.\" />\n                <Link\n                  title={errorLink}\n                  href=\"https://github.com/KrzysztofZawisla/ZSBRybnik/issues\"\n                />\n              </>\n            )\n          ) : (\n            <>\n              <TextBlock value={firstLineErrorText} />\n              <CodeBlock language=\"md\" value={codeBlockValue} />\n              <TextBlock value={secondLineErrorText} />\n              <Link\n                title={errorLink}\n                href=\"https://github.com/KrzysztofZawisla/ZSBRybnik/issues\"\n              />\n            </>\n          )\n        ) : (\n          <>\n            {compiledMarkdownRender}\n            {author ? <TextBlock value={authorText} /> : null}\n          </>\n        )}\n      </Section>\n    </Page>\n  );\n};\n\nexport default PostPage;\n","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\Error404.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\Subpage.tsx",["502"],"import React, {\n  FC,\n  useState,\n  useEffect,\n  Dispatch,\n  SetStateAction,\n  useContext,\n} from \"react\";\nimport Page from \"../components/Page\";\nimport Section from \"../components/Section\";\nimport CodeBlock from \"../components/CodeBlock/CodeBlock\";\nimport TextBlock from \"../components/TextBlock/TextBlock\";\nimport { compiler } from \"markdown-to-jsx\";\nimport markdownOptions from \"../other/makrdownOptions\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Link from \"../components/Link/Link\";\nimport GlobalContext, {\n  GlobalContextCompleteValues,\n  SubpagesDispatcher,\n  LanguageDispatcher,\n  Subpages,\n  IsOnlineDispatcher,\n} from \"../contextes/globalContext\";\nimport { useTranslation, UseTranslationResponse } from \"react-i18next\";\n\ntype TitleDispatcher = [string, Dispatch<SetStateAction<string>>];\ntype DisplayTitleDispatcher = [boolean, Dispatch<SetStateAction<boolean>>];\ntype ParseErrorDispatcher = [boolean, Dispatch<SetStateAction<boolean>>];\ntype SetNotFoundError = [boolean, Dispatch<SetStateAction<boolean>>];\ntype CompiledMarkdownRender = [\n  JSX.Element,\n  Dispatch<SetStateAction<JSX.Element>>\n];\ntype Subpage = {\n  displayTitle: boolean;\n  content: string;\n  title: string;\n};\n\ninterface SubpageRouteProps {\n  route: string;\n}\n\nexport interface SubpageProps extends RouteComponentProps<SubpageRouteProps> {}\n\nconst Subpage: FC<SubpageProps> = ({\n  match: {\n    params: { route },\n  },\n}: SubpageProps): JSX.Element => {\n  const {\n    subpagesDispatcher,\n    languageDispatcher,\n    isOnlineDispatcher,\n  }: GlobalContextCompleteValues = useContext(GlobalContext);\n  const [isOnline]: IsOnlineDispatcher = isOnlineDispatcher;\n  const [subpages, setSubpages]: SubpagesDispatcher = subpagesDispatcher;\n  const { t }: UseTranslationResponse = useTranslation();\n  const parsedLocationRoute: string = route ? route : \"\";\n  const isParsedLocationValid: boolean =\n    parsedLocationRoute === \"\" ? false : true;\n  const firstLineErrorText: string = isOnline\n    ? t(\"subpage.first-line-error-text\")\n    : \"Nie jesteśmy w stanie wyświetlić zawartości, jeśli nie podałeś parametru określającego podstronę. Proszę uzupełnij URL o ten parametr.\";\n  const secondLineErrorText: string = isOnline\n    ? t(\"subpage.second-line-error-text\")\n    : \"Jeśli sądzisz, że jest to nieprawidłowe działanie witryny zgłoś błąd po przez link poniżej.\";\n  const codeBlockValue: string = `${window.location.origin}${\n    window.location.pathname\n  }/${isOnline ? t(\"subpage.name-of-subpage\") : \"nazwa-podstrony\"}`;\n  const [language]: LanguageDispatcher = languageDispatcher;\n  const [title, setTitle]: TitleDispatcher = useState(\"\");\n  const [notFoundError, setNotFoundError]: SetNotFoundError = useState(\n    false\n  ) as SetNotFoundError;\n  const [displayTitle, setDisplayTitle]: DisplayTitleDispatcher = useState(\n    false\n  ) as DisplayTitleDispatcher;\n  const [parseError, setParseError]: ParseErrorDispatcher = useState(\n    false\n  ) as ParseErrorDispatcher;\n  const [\n    compiledMarkdownRender,\n    setCompiledMarkdownRender,\n  ]: CompiledMarkdownRender = useState(<></>);\n  useEffect((): void => {\n    setNotFoundError(false);\n    const setMarkdown = (content: string): void => {\n      try {\n        const compiledMarkdown: JSX.Element = compiler(\n          content,\n          markdownOptions\n        );\n        const fixedCompiledMarkdown: JSX.Element =\n          compiledMarkdown.key === \"outer\"\n            ? typeof compiledMarkdown.props.children === \"string\"\n              ? compiledMarkdown\n              : compiledMarkdown.props.children\n            : compiledMarkdown;\n        setCompiledMarkdownRender(fixedCompiledMarkdown);\n        setParseError(false);\n      } catch (err) {\n        console.error(err);\n        setParseError(true);\n      }\n    };\n    if (!subpages[parsedLocationRoute] && isParsedLocationValid) {\n      const tryRequest = async (): Promise<void> => {\n        const controller: AbortController = new AbortController();\n        const signal: AbortSignal = controller.signal;\n        const res: Response = await fetch(\n          `${process.env.REACT_APP_API_URL}/api/get-subpage?route=${parsedLocationRoute}&language=${language}`,\n          {\n            method: \"GET\",\n            signal: signal,\n          }\n        );\n        try {\n          const { displayTitle, title, content }: Subpage = await res.json();\n          setDisplayTitle(displayTitle);\n          setTitle(title);\n          setMarkdown(content);\n          const fixedSubpages: Subpages = { ...subpages };\n          fixedSubpages[parsedLocationRoute] = {\n            title: title,\n            content: content,\n            displayTitle: displayTitle,\n          };\n          setSubpages(fixedSubpages);\n        } catch (err) {\n          controller.abort();\n          const { status }: Response = res;\n          if (status === 404) {\n            setNotFoundError(true);\n          }\n        }\n      };\n      tryRequest();\n    } else if (isParsedLocationValid) {\n      const { displayTitle, title, content }: Subpage = subpages[\n        parsedLocationRoute\n      ];\n      setDisplayTitle(displayTitle);\n      setTitle(title);\n      setMarkdown(content);\n    }\n  }, [\n    parsedLocationRoute,\n    language,\n    setDisplayTitle,\n    setTitle,\n    setCompiledMarkdownRender,\n    setParseError,\n    isParsedLocationValid,\n    setSubpages,\n    subpages,\n    setNotFoundError,\n  ]);\n  const errorLinkText: string = isOnline\n    ? t(\"quick-actions.report-issue\")\n    : \"Zgłoś błąd\";\n  const errorLink: string =\n    \"https://github.com/KrzysztofZawisla/ZSBRybnik/issues\";\n  return (\n    <Page title={title}>\n      {!isParsedLocationValid || parseError || notFoundError ? (\n        <h2>\n          {parseError || notFoundError\n            ? parseError\n              ? \"Wystąpił błąd podczas przetwarzania treści:\"\n              : \"Nie znaleziono podstrony:\"\n            : \"Podaj parametr, żeby przenieść się do odpowiedniej podstrony:\"}\n        </h2>\n      ) : displayTitle ? (\n        title === \"\" ? null : (\n          <h2>{`${title}:`}</h2>\n        )\n      ) : null}\n      <Section>\n        {!isParsedLocationValid || parseError || notFoundError ? (\n          parseError || notFoundError ? (\n            parseError ? (\n              <>\n                <TextBlock value=\"Nie jesteśmy w stanie wyświetlić treści. Najprawdopodobniej błąd leży po stronie serwera.\" />\n                <Link title={errorLinkText} href={errorLink} />\n              </>\n            ) : (\n              <>\n                <TextBlock value=\"Niestety nie udało nam się odnaleźć podstrony skojarzonej z tym adresem. Jeśli sądzisz, że jest to nieprawidłowe działanie witryny zgłoś błąd po przez link poniżej.\" />\n                <Link title={errorLinkText} href={errorLink} />\n              </>\n            )\n          ) : (\n            <>\n              <TextBlock value={firstLineErrorText} />\n              <CodeBlock language=\"md\" value={codeBlockValue}></CodeBlock>\n              <TextBlock value={secondLineErrorText} />\n              <Link href={errorLink} title={errorLinkText} />\n            </>\n          )\n        ) : (\n          compiledMarkdownRender\n        )}\n      </Section>\n    </Page>\n  );\n};\n\nexport default Subpage;\n","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\ResetPasswordPage.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\ManagePostsPage.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\LoginPage.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\ManageUsersPage.tsx",["503","504","505","506","507","508"],"import Page from \"../components/Page\";\nimport React, {\n  FC,\n  useEffect,\n  useState,\n  useContext,\n  Dispatch,\n  SetStateAction,\n} from \"react\";\nimport Section from \"../components/Section\";\nimport Form from \"../components/Form\";\nimport Select from \"../components/Select/Select\";\nimport InputBox from \"../components/InputBox/InputBox\";\nimport Button from \"../components/Button/Button\";\nimport { mdiPlus, mdiPencil, mdiDelete } from \"@mdi/js\";\nimport GlobalContext from \"../contextes/globalContext\";\nimport { toast } from \"react-toastify\";\nimport getToken from \"../other/getToken\";\n\ntype UserAction = \"addUser\" | \"deleteUser\" | \"editUser\";\n\nexport interface ManageUsersPageProps {}\n\nconst ManageUsersPage: FC<ManageUsersPageProps> = (): JSX.Element => {\n  const { isMobileDispatcher } = useContext(GlobalContext);\n  const [isMobile] = isMobileDispatcher;\n  const title: string = \"Zarządzaj użytkownikami\";\n  const [userAction, setUserAction] = useState(\"addUser\" as UserAction);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(\"\");\n  const [login, setLogin] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  useEffect((): void => {\n    const getUsers = async () => {\n      try {\n        const res: Response = await fetch(\n          `${process.env.REACT_APP_API_URL}/api/get-users`\n        );\n        const data = await res.json();\n      } catch (err) {}\n    };\n    if (userAction === \"editUser\" || userAction === \"deleteUser\") {\n      getUsers();\n    }\n  }, [userAction]);\n  return (\n    <Page title={title}>\n      <h2>{title}:</h2>\n      <Section>\n        <Form>\n          <Select\n            label=\"Wybierz akcję\"\n            value={userAction}\n            onChange={(e) => {\n              setUserAction(e.target.value as UserAction);\n            }}\n          >\n            <option value=\"addUser\">Dodaj nowego użytkownika</option>\n            <option value=\"editUser\">Edytuj istniejącego użytkownika</option>\n            <option value=\"deleteUser\">Usuń istniejącego użytkownika</option>\n          </Select>\n          {(userAction === \"editUser\" || userAction === \"deleteUser\") && (\n            <Select\n              label={\n                userAction === \"editUser\"\n                  ? \"Wybierz użytkownika do edycji\"\n                  : \"Wybierz użytkownika do usunięcia\"\n              }\n              onChange={(e) => {}}\n            >\n              <option disabled></option>\n              {users &&\n                users.map(({ id, username }, index) => {\n                  return (\n                    <option key={index} value={id}>\n                      {username}\n                    </option>\n                  );\n                })}\n            </Select>\n          )}\n          <InputBox\n            label=\"Login\"\n            value={login}\n            placeholder=\"Maksymalnie 50 znaków\"\n            maxLength={50}\n            onChange={(e) => setLogin(e.target.value)}\n            disabled={userAction === \"deleteUser\" ? true : false}\n          />\n          <InputBox\n            label=\"Email\"\n            value={email}\n            placeholder=\"Maksymalnie 50 znaków\"\n            maxLength={50}\n            onChange={(e) => setEmail(e.target.value)}\n            disabled={userAction === \"deleteUser\" ? true : false}\n          />\n          <Select\n            label=\"Wybierz rolę\"\n            value={role}\n            onChange={(e) => setRole(e.target.value)}\n            disabled={userAction === \"deleteUser\" ? true : false}\n          >\n            <option disabled></option>\n            <option value=\"student\">Uczeń</option>\n            <option value=\"admin\">Administrator</option>\n          </Select>\n          <Button\n            title={\n              userAction === \"addUser\"\n                ? \"Dodaj użytkownika\"\n                : userAction === \"editUser\"\n                ? \"Edytuj użytkownika\"\n                : \"Uusń użytkownika\"\n            }\n            icon={\n              userAction === \"addUser\"\n                ? mdiPlus\n                : userAction === \"editUser\"\n                ? mdiPencil\n                : mdiDelete\n            }\n            onClick={() => {\n              const errorDuringAddingUser = () => {\n                toast.error(\"Wystąpił błąd podczas dodawania użytkownika\");\n              };\n              const tryRequest = async (): Promise<void> => {\n                !isMobile && toast.info(\"Przetwarzam żądanie\");\n                try {\n                  const res: Response = await fetch(\n                    `${process.env.REACT_APP_API_URL}/api/add-user`,\n                    {\n                      method: \"POST\",\n                      headers: {\n                        Authorization: getToken(),\n                        \"Content-Type\": \"application/json\",\n                        Accept: \"application/json\",\n                      },\n                      body: JSON.stringify({\n                        login,\n                        email,\n                        role,\n                      }),\n                    }\n                  );\n                  const { status }: Response = res;\n                  if (status === 200) {\n                    !isMobile && toast.success(\"Dodałeś użytkownika\");\n                  } else {\n                    !isMobile && errorDuringAddingUser();\n                  }\n                } catch (err) {\n                  !isMobile && errorDuringAddingUser();\n                }\n              };\n              tryRequest();\n            }}\n          />\n        </Form>\n      </Section>\n    </Page>\n  );\n};\n\nexport default ManageUsersPage;\n","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\ManageLessonPlanPage.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Loader\\Loader.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\AddUsersPage.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\ManageSubpagesPage.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\pages\\AddPostPage.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\Presentation.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\getToken.ts",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\parseJWT.ts",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\variables.ts",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\scrollTop.ts",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\toggleDarkTheme.ts",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\DesktopTopMenu\\DesktopTopMenuHeader.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MobileUpsideMenu\\MobileUpsideMenuHeader.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuButtonWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuOuterLink.tsx",["509","510"],"import React, { FC, useContext, useState } from \"react\";\nimport SlideOutMenuItemWrapper from \"./SlideOutMenuItemWrapper\";\nimport GlobalContext, {\n  GlobalContextCompleteValues,\n  IsDarkThemeDispatcher,\n} from \"../../contextes/globalContext\";\nimport { Helmet } from \"react-helmet-async\";\n\ninterface OuterLinkProps {\n  route: string;\n  title: string;\n}\n\nconst OuterLink: FC<OuterLinkProps> = ({\n  route,\n  title,\n}: OuterLinkProps): JSX.Element => {\n  const { isDarkThemeDispatcher }: GlobalContextCompleteValues = useContext(\n    GlobalContext\n  );\n  const [isDarkTheme]: IsDarkThemeDispatcher = isDarkThemeDispatcher;\n  return (\n    <a\n      href={route}\n      rel=\"noopener noreferrer\"\n      title={title}\n      aria-label={title}\n    >\n      <SlideOutMenuItemWrapper isDarkTheme={isDarkTheme}>\n        {title}\n      </SlideOutMenuItemWrapper>\n    </a>\n  );\n};\n\nexport default OuterLink;\n","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuCategory.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuHeightFixer.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MobileColorThemeButton\\MobileColorThemeButtonWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuInnerLink.tsx",["511","512"],"import React, { FC, useContext, useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link } from \"react-router-dom\";\nimport GlobalContext, {\n  GlobalContextCompleteValues,\n  IsMobileDispatcher,\n  IsSlideOutMenuOpenDispatcher,\n  IsDarkThemeDispatcher,\n} from \"../../contextes/globalContext\";\nimport scrollTop from \"../../other/scrollTop\";\nimport SlideOutMenuItemWrapper from \"./SlideOutMenuItemWrapper\";\n\ninterface InnerLinkProps {\n  route: string;\n  title: string;\n  onlyForMobile?: boolean;\n  onClick?: Function;\n}\n\nconst InnerLink: FC<InnerLinkProps> = ({\n  route,\n  title,\n  onlyForMobile,\n  onClick,\n}: InnerLinkProps): JSX.Element => {\n  const {\n    isMobileDispatcher,\n    isSlideOutMenuOpenDispatcher,\n    isDarkThemeDispatcher,\n  }: GlobalContextCompleteValues = useContext(GlobalContext);\n  const [isDarkTheme]: IsDarkThemeDispatcher = isDarkThemeDispatcher;\n  const [\n    ,\n    setIsSlideOutMenuOpen,\n  ]: IsSlideOutMenuOpenDispatcher = isSlideOutMenuOpenDispatcher;\n  const [isMobile]: IsMobileDispatcher = isMobileDispatcher;\n  return (\n    <>\n      {((onlyForMobile && isMobile) || !onlyForMobile) && (\n        <Link\n          to={route}\n          title={title}\n          aria-label={title}\n          onClick={(): void => {\n            scrollTop();\n            setIsSlideOutMenuOpen(false);\n            if (onClick) {\n              onClick();\n            }\n          }}\n        >\n          <SlideOutMenuItemWrapper isDarkTheme={isDarkTheme}>\n            {title}\n          </SlideOutMenuItemWrapper>\n        </Link>\n      )}\n    </>\n  );\n};\n\nexport default InnerLink;\n","D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\MobileBottomMenu\\MobileBottomMenuWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\PresentationWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\PresentationBlock.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\PresentationImageSection.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\PresentationSection.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Section.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Form.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Page.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Loader\\LoaderImage.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Loader\\LoaderWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Select\\Select.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Gallery\\Gallery.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\PresentationContentFitImage\\PresentationContentFitImage.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\PresentationImageBlock\\PresentationImageBlock.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\InputBox\\InputBox.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Button\\Button.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Textarea\\Textarea.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\other\\makrdownOptions.ts",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Link\\Link.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\TextBlock\\TextBlock.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\CodeBlock\\CodeBlock.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuCategoryChildrenWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuItemWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\ContentWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\SlideOutMenu\\SlideOutMenuCategoryWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Label.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Textarea\\TextareaWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Button\\ButtonTextWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\InputBox\\InputBoxWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\InputBox\\InputBoxInput.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\InputBox\\InputBoxLabel.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Button\\ButtonWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\PresentationImageBlock\\PresentationImageBlockWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Presentation\\PresentationContentFitImage\\PresentationContentFitImageBlock.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Gallery\\GalleryButton.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Gallery\\GalleryLogo.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Select\\SelectWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Gallery\\GalleryWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\VisibilityDetector.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Post\\Post.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\TextBlock\\MarkdownTextBlock.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\CodeBlock\\MarkdownCodeBlock.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Gallery\\MarkdownGallery.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\ThreejsView\\ThreejsView.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Chart\\MarkdownChart.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Image\\Image.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Table\\Table.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\TikTok\\TikTok.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Embed\\Embed.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Link\\LinkWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\TextBlock\\TextBlockWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Link\\LinkContentWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Link\\LinkHeader.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Post\\PostTitle.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Post\\PostImage.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Post\\PostWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Post\\PostTextWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Post\\PostHeader.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\ThreejsView\\ThreejsViewLoaderLogo.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\ThreejsView\\ThreejsViewLoader.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Image\\ImageFigure.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\ThreejsView\\ThreejsViewWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Image\\ImageFigcaption.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Table\\TableOuter.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Image\\ImageWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Chart\\Chart.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\TikTok\\TikTokWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Embed\\EmbedWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Table\\TableWrapper.tsx",[],"D:\\Dokumenty\\GitHub\\ZSBRybnikOrganization\\website\\src\\components\\Chart\\ChartWrapper.tsx",[],{"ruleId":"513","replacedBy":"514"},{"ruleId":"515","replacedBy":"516"},{"ruleId":"517","severity":1,"message":"518","line":125,"column":7,"nodeType":"519","messageId":"520","endLine":125,"endColumn":35},{"ruleId":"517","severity":1,"message":"521","line":128,"column":14,"nodeType":"519","messageId":"520","endLine":128,"endColumn":58},{"ruleId":"517","severity":1,"message":"522","line":130,"column":14,"nodeType":"519","messageId":"520","endLine":130,"endColumn":58},{"ruleId":"523","severity":1,"message":"524","line":1,"column":33,"nodeType":"519","messageId":"525","endLine":1,"endColumn":41},{"ruleId":"526","severity":1,"message":"527","line":131,"column":6,"nodeType":"528","endLine":131,"endColumn":27,"suggestions":"529"},{"ruleId":"523","severity":1,"message":"530","line":12,"column":10,"nodeType":"519","messageId":"525","endLine":12,"endColumn":17},{"ruleId":"523","severity":1,"message":"531","line":12,"column":19,"nodeType":"519","messageId":"525","endLine":12,"endColumn":28},{"ruleId":"523","severity":1,"message":"532","line":21,"column":10,"nodeType":"519","messageId":"525","endLine":21,"endColumn":23},{"ruleId":"523","severity":1,"message":"533","line":26,"column":10,"nodeType":"519","messageId":"525","endLine":26,"endColumn":29},{"ruleId":"523","severity":1,"message":"534","line":29,"column":10,"nodeType":"519","messageId":"525","endLine":29,"endColumn":26},{"ruleId":"523","severity":1,"message":"535","line":29,"column":6,"nodeType":"519","messageId":"525","endLine":29,"endColumn":24},{"ruleId":"517","severity":1,"message":"536","line":46,"column":7,"nodeType":"519","messageId":"520","endLine":46,"endColumn":32},{"ruleId":"523","severity":1,"message":"537","line":7,"column":3,"nodeType":"519","messageId":"525","endLine":7,"endColumn":11},{"ruleId":"523","severity":1,"message":"538","line":8,"column":3,"nodeType":"519","messageId":"525","endLine":8,"endColumn":17},{"ruleId":"523","severity":1,"message":"539","line":29,"column":17,"nodeType":"519","messageId":"525","endLine":29,"endColumn":25},{"ruleId":"523","severity":1,"message":"540","line":30,"column":10,"nodeType":"519","messageId":"525","endLine":30,"endColumn":22},{"ruleId":"523","severity":1,"message":"541","line":30,"column":24,"nodeType":"519","messageId":"525","endLine":30,"endColumn":39},{"ruleId":"523","severity":1,"message":"542","line":40,"column":15,"nodeType":"519","messageId":"525","endLine":40,"endColumn":19},{"ruleId":"523","severity":1,"message":"524","line":1,"column":33,"nodeType":"519","messageId":"525","endLine":1,"endColumn":41},{"ruleId":"523","severity":1,"message":"543","line":7,"column":10,"nodeType":"519","messageId":"525","endLine":7,"endColumn":16},{"ruleId":"523","severity":1,"message":"524","line":1,"column":33,"nodeType":"519","messageId":"525","endLine":1,"endColumn":41},{"ruleId":"523","severity":1,"message":"543","line":2,"column":10,"nodeType":"519","messageId":"525","endLine":2,"endColumn":16},"no-native-reassign",["544"],"no-negated-in-lhs",["545"],"@typescript-eslint/no-redeclare","'GlobalContext' is already defined.","Identifier","redeclared","'GlobalContextConsumer' is already defined.","'GlobalContextProvider' is already defined.","@typescript-eslint/no-unused-vars","'useState' is defined but never used.","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'routes'. Either include it or remove the dependency array.","ArrayExpression",["546"],"'mdiPlus' is defined but never used.","'mdiPencil' is defined but never used.","'subpageAction' is assigned a value but never used.","'subpageDisplayTitle' is assigned a value but never used.","'menuLinkCategory' is assigned a value but never used.","'MarkdownDispatcher' is defined but never used.","'Subpage' is already defined.","'Dispatch' is defined but never used.","'SetStateAction' is defined but never used.","'setUsers' is assigned a value but never used.","'selectedUser' is assigned a value but never used.","'setSelectedUser' is assigned a value but never used.","'data' is assigned a value but never used.","'Helmet' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"547","fix":"548"},"Update the dependencies array to be: [language, routes, setRoutes]",{"range":"549","text":"550"},[3951,3972],"[language, routes, setRoutes]"]